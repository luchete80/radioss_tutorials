132,135d131
< 
<   def add_node(self,x,y,z):
<     self.nodes.append((x,y,z))
<     self.node_count += 1
161,163d156
<     if (type=="spring"):
<       f.write('/SPRING/' + str(self.id) + '\n')
<     
512,528d504
< class Spring_Mesh(Mesh):
<   nodes = []
<   elnod = []
<   type = "spring"
<   def __init__(self, id, n1 = 0, n2 = 0):
<     #super(Spring_Mesh, self).__init__()
<     self.id = id
<     #self.elnod.append(n1,n2)
<   def __init__(self, id ):
<     #super(Spring_Mesh, self).__init__()
<     self.id = id
<     #self.elnod.append((0,0))
<   def add_elem(self,n1,n2):
<     self.elnod.append((n1,n2))
<     self.elem_count+=1
<     
< 
549d524
<   type = "shell"
554,577d528
<     if (type=="shell"):
<       f.write("##--------------------------------------------------------------------------------------------------\n")
<       f.write("## Shell Property Set (pid 1)\n")
<       f.write("##--------------------------------------------------------------------------------------------------\n")
<       f.write("/PROP/SHELL/" + str(self.pid) + "\n")
<       f.write("/PROP/SHELL/" + str(self.pid) + "\n")
<       f.write("SECTION_SHELL:1 TITLE:probe_section  \n")                                                               
<       f.write("#Ishell	Ismstr	Ish3n	Idril	 	 	P_thickfail\n")
<       f.write("         4         2                         \n")                                   
<       f.write("#hm	hf	hr	dm	dn\n")
<       f.write("\n")
<       f.write("#---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|\n")
<       f.write("#N	       Istrain	 Thick	             Ashear	 	           Ithick	Iplas    \n")                                                                                                
<       f.write(writeIntField(2, 10) + "          " + writeFloatField(self.thck,20,6) + "                                       1         1\n")
< 
< 
< class SpringProp(Prop):
<   k = 1.0
<   c = 0.0
<   #else if (type=="spring"):    
<   def __init__(self, pid, k):     
<     self.pid = pid
<     self.k = k
<   def printRadioss(self,f):
579c530
<     f.write("## Spring Property Set (pid 1)\n")
---
>     f.write("## Shell Property Set (pid 1)\n")
581,601c532,542
<     f.write("/PROP/TYPE13/" + str(self.pid) + "\n")
<     f.write("SECTION_SPRING TITLE:probe_section  \n")                                                               
<     f.write("#--Mass	           |            Inertia|	Skew_ID |	sens_ID	|  Isflag	|  Ifail	|Ileng	Ifail2\n")
<     f.write("         2.0e-6                                        \n")
<     for k in range(6): #DOF                                   
<       f.write("#---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|\n")
<       f.write("#                 K1	                 C1	                 A1	                 B1	                 D1\n")
<       if (k<3):
<         f.write(writeFloatField(self.k,20,6))
<       else:
<         f.write(writeFloatField(1.0e10,20,6))
<       for i in range(4):
<         f.write(writeFloatField(0.0,20,6))
<       f.write("\n")
<       for i in range(5):
<         f.write(writeIntField(0, 10))
<       f.write("\n")
<       for i in range(4):
<         f.write(writeIntField(0, 20))
<       f.write("\n")
< 
---
>     f.write("/PROP/SHELL/" + str(self.pid) + "\n")
>     f.write("SECTION_SHELL:1 TITLE:probe_section  \n")                                                               
>     f.write("#Ishell	Ismstr	Ish3n	Idril	 	 	P_thickfail\n")
>     f.write("         4         2                         \n")                                   
>     f.write("#hm	hf	hr	dm	dn\n")
>     f.write("\n")
>     f.write("#---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|\n")
>     f.write("#N	       Istrain	 Thick	             Ashear	 	           Ithick	Iplas    \n")                                                                                                
>     f.write(writeIntField(2, 10) + "          " + writeFloatField(self.thck,20,6) + "                                       1         1\n")
>              
>         
666d606
<   stiffk_     = 1.0e5         
691,692d630
<     if (self.mesh[0].type == "spring"):
<       f.write('/SPRING/' + str(self.id) + '\n')
694,695d631
<     #print ("initial node ",self.mesh[0].ini_node_id+ self.mesh[0].ini_node_id)
<     #print ("node: ", self.mesh[0].elnod[0][0])
817c753
<         
---
>         self.tot_nod_count = self.tot_nod_count + self.part[self.part_count-2].mesh[0].node_count
822,825c758,759
<       
<       self.tot_nod_count = self.tot_nod_count + self.part[self.part_count-1].mesh[0].node_count  
< 
<     print ("Part ", self.part_count, " initial node: ", self.part[self.part_count-1].mesh[0].ini_node_id, "end node: ", self.tot_nod_count)
---
>         
>     print ("Part ", self.part_count, " initial node: ", self.tot_nod_count + 1, "end node: ", self.tot_nod_count)
